//Task 1
#include <iostream>

void swap(int& a, int& b)
{
	int temp = a;
	a = b;
	b = temp;
}
int main()
{
	int a, b;
	std::cin >> a >> b;

	std::cout << a << ", " << b << "\n";
	swap(a, b);
	std::cout << a << ", " << b << "\n";
	return 0;
}
--------------------------------------------------------------------------------------------------------------------------------
//Task 2
#include <iostream>

long long absVal(long long a)
{
	return a < 0 ? -a : a;
}
int main()
{
	long long n;
	std::cin >> n;
	size_t count = (size_t)log10(absVal(n)) + 1;
	std::cout << count;
	return 0;
}
//second way
#include <iostream>

int main()
{
	long long n;
	std::cin >> n;
	size_t count = 0;
	
	while (n != 0)
	{		
		n /= 10;
		count++;
	}
	std::cout << count;
	return 0;
}
--------------------------------------------------------------------------------------------------------------------------------
//Task 3
#include <iostream>

size_t myStrLen(const char* str)
{
	size_t len;
	for (len = 0; str[len] != '\0'; len++) {}
	return len;
}

bool isDigit(const char symbol)
{
	return (symbol >= '0' && symbol <= '9');
}

bool checkDate(const char* text)
{
	size_t len = myStrLen(text);
	if (len != 5) return false;
	if (!isDigit(text[0]) || !isDigit(text[1])) return false;
	if (text[2] != '.') return false;
	if (!isDigit(text[3]) || !isDigit(text[4])) return false;

	size_t days = (text[0] - '0') * 10 + text[1] - '0';
	size_t months = ((text[3] - '0') * 10 + text[4] - '0');
	if (months < 1 || months>12) return false;
	size_t maxDaysPerMonth[] =
	{
		0,
		31, 29, 31, 30, 31, 30,
		31, 31, 30, 31, 30, 31
	};
	return days <= maxDaysPerMonth[months];
}

int main()
{
	const char* str1 = "22.12";
	const char* str2 = "31.02";
		
	std::cout << checkDate(str1)<<std::endl;
	std::cout << checkDate(str2) << std::endl;

	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------
//Task 4
